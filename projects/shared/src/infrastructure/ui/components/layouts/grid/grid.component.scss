@import "../../../../styles/variables";
@import "../../../../styles/mixins";

:host {
  display: block;
}

.grid {
  display: grid;
  // Base columns (default is 12)
  grid-template-columns: repeat(12, minmax(0, 1fr));

  // Column setup by specific column count
  &--cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  &--cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  &--cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  &--cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  &--cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  &--cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  &--cols-12 {
    grid-template-columns: repeat(12, minmax(0, 1fr));
  }

  &--cols-auto {
    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  }

  // Responsive column support
  @media (min-width: $breakpoint-xs) {
    &--cols-1-xs {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    &--cols-2-xs {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    &--cols-3-xs {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    &--cols-4-xs {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    &--cols-6-xs {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }

    &--cols-12-xs {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }

    &--cols-auto-xs {
      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    }
  }

  @media (min-width: $breakpoint-sm) {
    &--cols-1-sm {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    &--cols-2-sm {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    &--cols-3-sm {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    &--cols-4-sm {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    &--cols-6-sm {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }

    &--cols-12-sm {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }

    &--cols-auto-sm {
      grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    }
  }

  @media (min-width: $breakpoint-md) {
    &--cols-1-md {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    &--cols-2-md {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    &--cols-3-md {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    &--cols-4-md {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    &--cols-6-md {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }

    &--cols-12-md {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }

    &--cols-auto-md {
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    }
  }

  @media (min-width: $breakpoint-lg) {
    &--cols-1-lg {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    &--cols-2-lg {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    &--cols-3-lg {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    &--cols-4-lg {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    &--cols-6-lg {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }

    &--cols-12-lg {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }

    &--cols-auto-lg {
      grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    }
  }

  @media (min-width: $breakpoint-xl) {
    &--cols-1-xl {
      grid-template-columns: repeat(1, minmax(0, 1fr));
    }

    &--cols-2-xl {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    &--cols-3-xl {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }

    &--cols-4-xl {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }

    &--cols-6-xl {
      grid-template-columns: repeat(6, minmax(0, 1fr));
    }

    &--cols-12-xl {
      grid-template-columns: repeat(12, minmax(0, 1fr));
    }

    &--cols-auto-xl {
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    }
  }

  // Gap sizes
  &--gap-xs {
    gap: $spacing-xs;
  }

  &--gap-sm {
    gap: $spacing-sm;
  }

  &--gap-md {
    gap: $spacing-md;
  }

  &--gap-lg {
    gap: $spacing-lg;
  }

  &--gap-xl {
    gap: $spacing-xl;
  }

  // Row gap sizes
  &--row-gap-xs {
    row-gap: $spacing-xs;
  }

  &--row-gap-sm {
    row-gap: $spacing-sm;
  }

  &--row-gap-md {
    row-gap: $spacing-md;
  }

  &--row-gap-lg {
    row-gap: $spacing-lg;
  }

  &--row-gap-xl {
    row-gap: $spacing-xl;
  }

  // Column gap sizes
  &--column-gap-xs {
    column-gap: $spacing-xs;
  }

  &--column-gap-sm {
    column-gap: $spacing-sm;
  }

  &--column-gap-md {
    column-gap: $spacing-md;
  }

  &--column-gap-lg {
    column-gap: $spacing-lg;
  }

  &--column-gap-xl {
    column-gap: $spacing-xl;
  }

  // Alignment
  &--align-start {
    align-items: start;
  }

  &--align-center {
    align-items: center;
  }

  &--align-end {
    align-items: end;
  }

  &--align-stretch {
    align-items: stretch;
  }

  // Justification
  &--justify-start {
    justify-content: start;
  }

  &--justify-center {
    justify-content: center;
  }

  &--justify-end {
    justify-content: end;
  }

  &--justify-between {
    justify-content: space-between;
  }

  &--justify-around {
    justify-content: space-around;
  }

  // Full-width and full-height variants
  &--full-width {
    width: 100%;
  }

  &--full-height {
    height: 100%;
  }
}
