@use "variables" as *;

// Flexbox utilities
@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: center,
  $wrap: nowrap,
  $gap: 0
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
  @if $gap != 0 {
    gap: $gap;
  }
}

// Grid layouts
@mixin grid($columns: 1fr, $rows: auto, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

// Responsive breakpoints
@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: $breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

// Text truncation
@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Typography styles
@mixin text(
  $size: base,
  $weight: normal,
  $color: $text-color-primary,
  $line-height: normal
) {
  @if $size == xs {
    font-size: $font-size-xs;
  } @else if $size == sm {
    font-size: $font-size-sm;
  } @else if $size == base {
    font-size: $font-size-base;
  } @else if $size == lg {
    font-size: $font-size-lg;
  } @else if $size == xl {
    font-size: $font-size-xl;
  } @else if $size == 2xl {
    font-size: $font-size-2xl;
  } @else if $size == 3xl {
    font-size: $font-size-3xl;
  } @else if $size == 4xl {
    font-size: $font-size-4xl;
  }

  @if $weight == light {
    font-weight: $font-weight-light;
  } @else if $weight == normal {
    font-weight: $font-weight-normal;
  } @else if $weight == medium {
    font-weight: $font-weight-medium;
  } @else if $weight == semibold {
    font-weight: $font-weight-semibold;
  } @else if $weight == bold {
    font-weight: $font-weight-bold;
  } @else {
    font-weight: $weight;
  }

  color: $color;

  @if $line-height != normal {
    line-height: $line-height;
  }
}

// Box shadow variations
@mixin shadow($size: md) {
  @if $size == sm {
    box-shadow: $shadow-sm;
  } @else if $size == md {
    box-shadow: $shadow-md;
  } @else if $size == lg {
    box-shadow: $shadow-lg;
  } @else if $size == xl {
    box-shadow: $shadow-xl;
  } @else if $size == none {
    box-shadow: none;
  }
}

// Card styles
@mixin card(
  $padding: $spacing-md,
  $radius: $card-border-radius,
  $shadow: md,
  $bg-color: $bg-color-primary
) {
  background-color: $bg-color;
  border-radius: $radius;
  padding: $padding;
  @include shadow($shadow);
}

// Button styles
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: $border-radius;
  font-weight: $font-weight-medium;
  padding: $spacing-sm $spacing-md;
  transition: all $transition-base ease;
  cursor: pointer;
  border: none;
  text-decoration: none;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color, $hover-color) {
  background-color: $bg-color;
  color: $text-color;

  &:hover:not(:disabled) {
    background-color: $hover-color;
  }

  &:focus {
    outline: 2px solid rgba($bg-color, 0.5);
    outline-offset: 2px;
  }
}

// Positioning
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin fixed-center {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Forms
@mixin form-control {
  display: block;
  width: 100%;
  padding: $spacing-sm $spacing-md;
  font-size: $font-size-base;
  line-height: 1.5;
  color: $text-color-primary;
  background-color: $bg-color-primary;
  background-clip: padding-box;
  border: 1px solid $border-color;
  border-radius: $border-radius;
  transition: border-color $transition-base ease-in-out;

  &:focus {
    border-color: $primary-color;
    outline: 0;
    box-shadow: 0 0 0 3px rgba($primary-color, 0.1);
  }

  &::placeholder {
    color: $text-color-tertiary;
  }

  &:disabled {
    background-color: $bg-color-tertiary;
    opacity: 0.7;
    cursor: not-allowed;
  }
}

// Badges/Status indicators
@mixin badge($bg-color: $primary-color, $text-color: white) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.125rem 0.5rem;
  font-size: $font-size-xs;
  font-weight: $font-weight-medium;
  line-height: 1;
  text-align: center;
  white-space: nowrap;
  vertical-align: baseline;
  border-radius: $border-radius-full;
  background-color: $bg-color;
  color: $text-color;
}

// Transitions
@mixin transition($property: all, $duration: $transition-base, $timing: ease) {
  transition: $property $duration $timing;
}

// Hover effects
@mixin hover-lift {
  transition: transform $transition-base ease, box-shadow $transition-base ease;

  &:hover {
    transform: translateY(-2px);
    @include shadow(lg);
  }
}

// Animations
@mixin animate-fade-in($duration: 0.3s, $delay: 0s) {
  animation: fadeIn $duration ease $delay forwards;

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
}

@mixin animate-slide-up($duration: 0.3s, $delay: 0s, $distance: 10px) {
  animation: slideUp $duration ease $delay forwards;

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY($distance);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

// Dashboard specific
@mixin sidebar-item {
  display: flex;
  align-items: center;
  padding: $spacing-sm $spacing-md;
  border-radius: $border-radius;
  transition: all $transition-base ease;
  text-decoration: none;
  color: $text-color-secondary;
  font-weight: $font-weight-medium;

  &:hover {
    background-color: $bg-color-tertiary;
    color: $text-color-primary;
  }

  &.active {
    background-color: rgba($primary-color, 0.1);
    color: $primary-color;
  }
}

// Scroll styles
@mixin custom-scrollbar(
  $width: 6px,
  $track-color: $bg-color-tertiary,
  $thumb-color: $text-color-tertiary
) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $border-radius-full;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $thumb-color;
    border-radius: $border-radius-full;

    &:hover {
      background-color: darken($thumb-color, 10%);
    }
  }
}
